{{- if .Values.components.otel.enabled }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: phoenix
spec:
  serviceName: phoenix
  replicas: 1
  selector:
    matchLabels:
      app: phoenix
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: phoenix
    spec:
      containers:
      - args:
        - -m
        - phoenix.server.main
        - serve
        command:
        - python
        env:
        - name: PHOENIX_SQL_DATABASE_URL
          value: postgresql://postgres:postgres123@postgres:5432/postgres
        - name: PHOENIX_WORKING_DIR
          value: /mnt/data
        - name: PHOENIX_PORT
          value: "6006"
        image: arizephoenix/phoenix:version-8.32.1
        name: phoenix
        ports:
        - containerPort: 6006
        - containerPort: 9090
        - containerPort: 4317
        readinessProbe:
          httpGet:
            port: 6006
        volumeMounts:
        - mountPath: /mnt/data
          name: phoenix
  volumeClaimTemplates:
  - metadata:
      name: phoenix
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRESQL_DATABASE
          value: postgresdb
        - name: POSTGRESQL_USERNAME
          value: postgres
        - name: POSTGRESQL_PASSWORD
          value: postgres123
        - name: POSTGRESQL_PGAUDIT_LOG
          value: none
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: docker.io/bitnami/postgresql:12
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U postgres -d postgresdb
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: postgres-data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: phoenix
    app.kubernetes.io/instance: phoenix
    app.kubernetes.io/name: phoenix
  name: phoenix
spec:
  ports:
  - appProtocol: http
    name: http
    port: 6006
    protocol: TCP
    targetPort: 6006
  - appProtocol: http
    name: http2
    port: 9090
    protocol: TCP
    targetPort: 9090
  - appProtocol: grpc
    name: grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app: phoenix
  type: ClusterIP
---
{{- if .Values.openshift }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: "true"
  name: phoenix
spec:
  path: /
  port:
    targetPort: 6006
  to:
    kind: Service
    name: phoenix
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
{{- end }}
{{- end }}