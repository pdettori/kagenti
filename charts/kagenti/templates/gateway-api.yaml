{{- if .Values.components.gatewayApi.enabled }}
# ——————————————————————————————————————————————————————————————————————————————
#  RBAC for the Installer and Uninstaller Jobs
#  These resources are also created as hooks to ensure they exist before the
#  jobs run and are cleaned up appropriately.
# ——————————————————————————————————————————————————————————————————————————————
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "kagenti.fullname" . }}-installer-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    # This SA is created during both install and delete phases
    "helm.sh/hook": pre-install, pre-upgrade, pre-delete
    "helm.sh/hook-weight": "-5" # Very low weight to ensure it's created first
    "helm.sh/hook-delete-policy": before-hook-creation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kagenti.fullname" . }}-crd-manager-role
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade, pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "kagenti.fullname" . }}-crd-manager-binding
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade, pre-delete
    "helm.sh/hook-weight": "-4" # Runs after the SA and Role are created
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "kagenti.fullname" . }}-crd-manager-role
subjects:
  - kind: ServiceAccount
    name: {{ include "kagenti.fullname" . }}-installer-sa
    namespace: {{ .Release.Namespace }}
---
# ——————————————————————————————————————————————————————————————————————————————
#  Installation Job (Post-Install Hook)
#  This job runs AFTER the main chart installation is successful.
#  It applies the manifest from the configured URL.
# ——————————————————————————————————————————————————————————————————————————————
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kagenti.fullname" . }}-install-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    {{- include "kagenti.labels" . | nindent 4 }}
spec:
  backoffLimit: 3
  template:
    spec:
      serviceAccountName: {{ include "kagenti.fullname" . }}-installer-sa
      restartPolicy: Never
      containers:
        - name: kubectl-installer
          image:  "{{ .Values.gatewayApi.installer.image }}"
          command:
            - "/bin/sh"
            - "-c"
            - |
              set -e
              echo "Applying manifest from: {{ .Values.gatewayApi.manifestUrl }}"
              kubectl apply -f {{ .Values.gatewayApi.manifestUrl | quote }}
              echo "Manifest applied successfully."
---
# ——————————————————————————————————————————————————————————————————————————————
#  Uninstallation Job (Pre-Delete Hook)
#  This job runs BEFORE Helm deletes the main chart's resources.
#  It deletes the resources from the same URL.
# ——————————————————————————————————————————————————————————————————————————————
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kagenti.fullname" . }}-delete-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    {{- include "kagenti.labels" . | nindent 4 }}
spec:
  backoffLimit: 3
  template:
    spec:
      serviceAccountName: {{ include "kagenti.fullname" . }}-installer-sa
      restartPolicy: Never
      containers:
        - name: kubectl-uninstaller
          image: "{{ .Values.common.kubectlImage }}"
          command:
            - "/bin/sh"
            - "-c"
            - |
              set -e
              echo "Deleting manifest from: {{ .Values.gatewayApi.manifestUrl }}"
              # Use --ignore-not-found to prevent errors if the resources were already deleted
              kubectl delete -f {{ .Values.gatewayApi.manifestUrl | quote }} --ignore-not-found=true
              echo "Manifest deleted successfully."
{{- end }}